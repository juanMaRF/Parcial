#include "caidal.h"
#include "obstaculo.h"
#include "mainwindow.h"

extern MainWindow * game;

QRectF caidaL::boundingRect() const
{
    return QRectF(-r,-r,r*2,r*2);
}

void caidaL::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
{
    painter->setBrush(Qt::red);
    painter->drawEllipse(boundingRect());
}

caidaL::caidaL()
{

}

caidaL::caidaL(int x, int y)
{
    PosX=x;
    PosY=y;

    connect(timepo,SIGNAL(timeout()),this,SLOT(move()));
    timepo->start(50);

}

void caidaL::vel_act()
{
    Vel=Vel-g*delta;
}

void caidaL::move()
{
    QList<QGraphicsItem *> colliding_items = collidingItems();

    for(int i = 0, n = colliding_items.size(); i < n; i++){
        if(typeid(colliding_items[i]) == typeid (obstaculo)){
            this->setR(getR()-1);
            this->setVel()
            if(this->getR()==0){
                scene()->removeItem(this);
            }
         
        }
    }
    
    PosY=PosY-(0.5*Vel*delta);
    setPos(PosX,PosY);
    vel_act();
}

double caidaL::getVel() const
{
    return Vel;
}

void caidaL::setVel(double value)
{
    Vel = value;
}

int caidaL::getR() const
{
    return r;
}

void caidaL::setR(int value)
{
    r = value;
}
